# Generated by Selenium IDE
require 'selenium-webdriver'
require 'json'
describe 'Testcase2' do
  before(:each) do
    @driver = Selenium::WebDriver.for(:remote, url: 'http://localhost:4444/wd/hub', desired_capabilities: Selenium::WebDriver::Remote::Capabilities.chrome)
    @vars = {}
  end
  after(:each) do
    @driver.quit
  end
  def wait_for_window(self, timeout = 2):
    sleep(round(timeout / 1000))
    wh_now = @driver.window_handles
    wh_then = @vars['window_handles']
    wh_now.find { |window| window != wh_then.first
  end
  it 'testcase2' do
    # Test name: Testcase2
    # Step # | name | target | value
    # 1 | open | https://itmscoaching.herokuapp.com/switch-window?fbclid=IwAR3sjVTRQSHLelERm2a2YkXLkMAARbME8dvuIFHOg0IufS4_67G7MvTrOm0 | 
    @driver.get('https://itmscoaching.herokuapp.com/switch-window?fbclid=IwAR3sjVTRQSHLelERm2a2YkXLkMAARbME8dvuIFHOg0IufS4_67G7MvTrOm0')
    # 2 | setWindowSize | 1042x814 | 
    @driver.manage.resize_to(1042, 814)
    # 3 | click | id=new-tab-button | 
    @vars['window_handles'] = @driver.window_handles
    # 4 | storeWindowHandle | root | 
    @driver.find_element(:id, 'new-tab-button').click
    # 5 | selectWindow | handle=${win1454} | 
    @vars['win1454'] = wait_for_window(2000)
    # 6 | selectWindow | handle=${root} | 
    @vars['root'] = @driver.window_handle
    # 7 | click | id=alert-button | 
    @driver.switch_to.window(@vars['win1454'])
    # 8 | assertAlert | This is a test alert! | 
    @driver.switch_to.window(@vars['root'])
    @driver.find_element(:id, 'alert-button').click
    expect(@driver.switch_to.alert.text).to eq('This is a test alert!')
  end
end
